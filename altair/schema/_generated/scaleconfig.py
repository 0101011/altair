# This file auto-generated by altair.schema.parser.write_files().
# do not modify directly.

import traitlets as T
from ..baseobject import BaseObject


class ScaleConfig(BaseObject):
    round = T.Bool(default_value=None, allow_none=True, help="""If true, rounds numeric output values to integers.""")
    sequentialColorRange = T.Union([T.Unicode(default_value=None, allow_none=True), T.List(T.Unicode(default_value=None, allow_none=True), default_value=None, allow_none=True)])
    nominalColorRange = T.Union([T.Unicode(default_value=None, allow_none=True), T.List(T.Unicode(default_value=None, allow_none=True), default_value=None, allow_none=True)])
    padding = T.CFloat(default_value=None, allow_none=True, help="""Default padding for `x` and `y` ordinal scales.""")
    bandSize = T.CFloat(default_value=None, allow_none=True, min=0, help="""Default band size for (1) `y` ordinal scale,

and (2) `x` ordinal scale when the mark is not `text`.""")
    barSizeRange = T.List(T.CFloat(default_value=None, allow_none=True), default_value=None, allow_none=True, help="""Default range for bar size scale.""")
    shapeRange = T.Union([T.Unicode(default_value=None, allow_none=True), T.List(T.Unicode(default_value=None, allow_none=True), default_value=None, allow_none=True)])
    includeRawDomain = T.Bool(default_value=None, allow_none=True)
    fontSizeRange = T.List(T.CFloat(default_value=None, allow_none=True), default_value=None, allow_none=True, help="""Default range for font size scale.""")
    pointSizeRange = T.List(T.CFloat(default_value=None, allow_none=True), default_value=None, allow_none=True, help="""Default range for bar size scale.""")
    textBandWidth = T.CFloat(default_value=None, allow_none=True, min=0, help="""Default band width for `x` ordinal scale when is mark is `text`.""")

